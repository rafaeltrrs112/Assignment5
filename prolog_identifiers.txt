('Prolog', 'UPDATED_PROB')
('Prolog', 'IS')
('Prolog', 'NUM_TIGERS')
('Prolog', 'f')
('Prolog', 'PROBR')
('Prolog', 'REM_DOR')
('Prolog', 'nb_setval')
('Prolog', 'NUMGLADS')
('Prolog', 'case')
('Prolog', 'COND')
('Prolog', 'TURN')
('Prolog', 'd')
('Prolog', 'taken')
('Prolog', 'UPDATE')
('Prolog', 'INIT_ALL')
('Prolog', 'REM_DORR')
('Prolog', 'REMOVE')
('Prolog', 'generate_output_string')
('Prolog', 'DOOR')
('Prolog', 'GLAD_TURN')
('Prolog', 'condLeft')
('Prolog', 'LISPY')
('Prolog', 'ASSUME_REMAIN')
('Prolog', 'amount')
('Prolog', 'gladiators')
('Prolog', 'DEAD')
('Prolog', 'A')
('Prolog', 'UDPATE')
('Prolog', 'GO')
('Prolog', 'The')
('Prolog', 'PROB')
('Prolog', 'nb_getval')
('Prolog', 'AND')
('Prolog', 'TIGER')
('Prolog', 'Base')
('Prolog', 'INT_I')
('Prolog', 'GLAD_TURNL')
('Prolog', 'n')
('Prolog', 'recurseR')
('Prolog', 'ASSUME')
('Prolog', 'a')
('Prolog', 'LIVING_COUNT')
('Prolog', 'WIN')
('Prolog', 'REM_TIGR')
('Prolog', 'REM_TIG')
('Prolog', 'GET')
('Prolog', 'previous')
('Prolog', 'RIGHT')
('Prolog', 'is')
('Prolog', 'par')
('Prolog', 'b')
('Prolog', 'GLAD_TURNR')
('Prolog', 'of')
('Prolog', 'SURVIVOR_COUNT')
('Prolog', 'probability')
('Prolog', 'by')
('Prolog', 'L')
('Prolog', 'LIVING_TOTAL')
('Prolog', 'R')
('Prolog', 'condRight')
('Prolog', 'SUM_PROBAL')
('Prolog', 'CURRENT_PROB')
('Prolog', 'REDUCE')
('Prolog', 'PREVIOUS_PROBABILITY')
('Prolog', 'the')
('Prolog', 'CASE')
('Prolog', 'recurseL')
('Prolog', 'read')
('Prolog', 'SUM_PROBABILITY')
('Prolog', 'SURVIVERS')
('Prolog', 'make_prob_list')
('Prolog', 'CONTINUE')
('Prolog', 'turns')
('Prolog', 'write')
('Prolog', 'e')
('Prolog', 'Branch')
('Prolog', 'cond_dove_qua')
('Prolog', 'NW')
('Prolog', 'current')
('Prolog', 'occurring')
('Prolog', 'true')
('Prolog', 'VICTORS')
('Prolog', 'GLADS')
('Prolog', 'false')
('Prolog', 'atom_concat')
('Prolog', 'DOVES_AMOUNT')
('Prolog', 'nl')
('Prolog', 'REM_DORL')
('Prolog', 'c')
('Prolog', 'SET')
('Prolog', 'PROBL')
('Prolog', 'ALIVE')
('Prolog', 'PROLOG')
('Prolog', 'EVIL')
('Prolog', 'TOTALPROB')
('Prolog', 'toTheGames')
('Prolog', 'ERR')
('Prolog', 'DOORS')
('Prolog', 'X')
